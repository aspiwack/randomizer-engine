### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    pkgs = self.pkgs;
    repoPath = self.repoPath;
    repos = 
    {
      opam-repository = 
      rec {
        fetch = 
        {
          owner = "ocaml";
          repo = "opam-repository";
          rev = "810484a37015a8e21f1c1b4f60a0965e79e60b7a";
          sha256 = "1yvxxbcz2yhjqk73s72k4ljbzgnsv5fp550gzp9142w385i2x1pb";
        };
        src = (pkgs.fetchFromGitHub) fetch;
      };
    };
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.11.1";
  repos = repos;
  selection = 
  {
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    biniou = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:12ykyqa9piw1gny1flsi43qph411alzsm3rr8cgs5ap4drk3xbrd";
        package = "packages/biniou/biniou.1.2.1";
      };
      pname = "biniou";
      src = pkgs.fetchurl 
      {
        sha256 = "0da3m0g0dhl02jfynrbysjh070xk2z6rxcx34xnqx6ljn5l6qm1m";
        url = "https://github.com/mjambon/biniou/releases/download/1.2.1/biniou-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    camomile = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1nn4pgjqqf2xar53fx5f7rwagd9kim2qy21db94rxn7kw1z04ih4";
        package = "packages/camomile/camomile.1.0.2";
      };
      pname = "camomile";
      src = pkgs.fetchurl 
      {
        sha256 = "0chn7ldqb3wyf95yhmsxxq65cif56smgz1mhhc7m0dpwmyq1k97h";
        url = "https://github.com/yoriyuki/Camomile/releases/download/1.0.2/camomile-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    charInfo_width = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1llh67ns94c9jn1mki2crs0r4ny0v249q7anj0phb8dijda6jd89";
        package = "packages/charInfo_width/charInfo_width.1.1.0";
      };
      pname = "charInfo_width";
      src = pkgs.fetchurl 
      {
        sha256 = "0wl1hcwbx2mmgbhwh1wwgjixvppjq0k43nqyq13xm4pvgdxfvci1";
        url = "https://github.com/kandu/charInfo_width/archive/1.1.0.tar.gz";
      };
      version = "1.1.0";
    };
    cmdliner = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:05qlm4yp6124w2z10dpdchldfrmgmcr6h31rnxp8qs8mk0xzx48z";
        package = "packages/cmdliner/cmdliner.1.0.4";
      };
      pname = "cmdliner";
      src = pkgs.fetchurl 
      {
        sha256 = "1h04q0zkasd0mw64ggh4y58lgzkhg6yhzy60lab8k8zq9ba96ajw";
        url = "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz";
      };
      version = "1.0.4";
    };
    conf-autoconf = 
    {
      buildInputs = [ (pkgs.autoconf) ];
      opamInputs = {
                     conf-which = selection.conf-which;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0673l2awx2cd57hqf07vrhpf2c4kn6xlgc85sdbz2k1n5flh77gs";
        package = "packages/conf-autoconf/conf-autoconf.0.1";
      };
      pname = "conf-autoconf";
      src = null;
      version = "0.1";
    };
    conf-which = 
    {
      buildInputs = [ (pkgs.which) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:03bz5rr206lv364q1k8rd6dkjkp8w6sjf1hbvz7svp46nf0kc7ps";
        package = "packages/conf-which/conf-which.1";
      };
      pname = "conf-which";
      src = null;
      version = "1";
    };
    containers = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1myyja46bfqbi151byvn6d3dqcgkd2w7mz33y829012ar8gj8jzg";
        package = "packages/containers/containers.3.2";
      };
      pname = "containers";
      src = pkgs.fetchurl 
      {
        sha256 = "0pii2whhyri2hmxzm4vhl71dj04vag9r23zza2b5d98w51sx9fzc";
        url = "https://github.com/c-cube/ocaml-containers/archive/v3.2.tar.gz";
      };
      version = "3.2";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1kga0i21r60914qcjnxaxx03p6vj476j4sgcfnndcawycsip8zix";
        package = "packages/cppo/cppo.1.6.7";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "17ajdzrnmnyfig3s6hinb56mcmhywbssxhsq32dz0v90dhz3wmfv";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.7/cppo-v1.6.7.tbz";
      };
      version = "1.6.7";
    };
    csexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1wi05gfxxhg8i2i2mdgigqq0cxc3dizxzr7j6729mq4mfb06gpxx";
        package = "packages/csexp/csexp.1.4.0";
      };
      pname = "csexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0kinvwzbylcx2ky8s8a7ki1i0vql1lm2mdz8vqka20pihz56ygcf";
        url = "https://github.com/ocaml-dune/csexp/releases/download/1.4.0/csexp-1.4.0.tbz";
      };
      version = "1.4.0";
    };
    dot-merlin-reader = 
    {
      opamInputs = 
      {
        csexp = selection.csexp;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        yojson = selection.yojson;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:14w8xfc8nbkkrcqzsx8ql9dar1ni9vh7wfg6pavlprjjzq3vhyll";
        package = "packages/dot-merlin-reader/dot-merlin-reader.4.1";
      };
      pname = "dot-merlin-reader";
      src = pkgs.fetchurl 
      {
        sha256 = "1kg765h6gqq5ffa1fdvm0kpa9w922y3af804ags5ssk4p1pnv8ql";
        url = "https://github.com/ocaml/merlin/releases/download/v4.1/dot-merlin-reader-v4.1.tbz";
      };
      version = "4.1";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18rqn9kpf45xzac0vj127nqvc3s6w3ci4i76k0dbm08nl6nhx7n9";
        package = "packages/dune/dune.2.8.4";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "1b78f8gk53m68i9igvfpylmvi55h4qqfwymknz1vval4flbj0r2f";
        url = "https://github.com/ocaml/dune/releases/download/2.8.4/dune-2.8.4.tbz";
      };
      version = "2.8.4";
    };
    dune-build-info = 
    {
      opamInputs = {
                     dune = selection.dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1avmamya0hwwacn2b8llnz84z2yawpagyc057j6mz5spzngb1dsc";
        package = "packages/dune-build-info/dune-build-info.2.8.4";
      };
      pname = "dune-build-info";
      src = pkgs.fetchurl 
      {
        sha256 = "1b78f8gk53m68i9igvfpylmvi55h4qqfwymknz1vval4flbj0r2f";
        url = "https://github.com/ocaml/dune/releases/download/2.8.4/dune-2.8.4.tbz";
      };
      version = "2.8.4";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        csexp = selection.csexp;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1id48szqssvglcsp7k4nyv11qyn6696bas0j7kc5y0v8g9ww0b7r";
        package = "packages/dune-configurator/dune-configurator.2.8.4";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "1b78f8gk53m68i9igvfpylmvi55h4qqfwymknz1vval4flbj0r2f";
        url = "https://github.com/ocaml/dune/releases/download/2.8.4/dune-2.8.4.tbz";
      };
      version = "2.8.4";
    };
    easy-format = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1zahpwp0021xygbwpygrrwa5g65qq6dfqngckb3823ybc6l79lva";
        package = "packages/easy-format/easy-format.1.3.2";
      };
      pname = "easy-format";
      src = pkgs.fetchurl 
      {
        sha256 = "09hrikx310pac2sb6jzaa7k6fmiznnmhdsqij1gawdymhawc4h1l";
        url = "https://github.com/mjambon/easy-format/releases/download/1.3.2/easy-format-1.3.2.tbz";
      };
      version = "1.3.2";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1lvq50p7a5i59jqkn4zijxm9p92c6phi20akdj3qbmlnjn8lqs7h";
        package = "packages/fmt/fmt.0.8.9";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "0gkkkj4x678vxdda4xaw2dd44qjacavsvn5nx8gydfwah6pjbkxk";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.9.tbz";
      };
      version = "0.8.9";
    };
    gen = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0h62m8pf7jdvl6acdw3pnmb9j37z0ph3acsm752kn6xvznijssd6";
        package = "packages/gen/gen.0.5.3";
      };
      pname = "gen";
      src = pkgs.fetchurl 
      {
        sha256 = "1jylp0i6952lj3cvmy2c4a5my5cbf39kynxgbh4xg3k7dp7540qn";
        url = "https://github.com/c-cube/gen/archive/0.5.3.tar.gz";
      };
      version = "0.5.3";
    };
    hashcons = 
    {
      opamInputs = 
      {
        conf-autoconf = selection.conf-autoconf;
        conf-which = selection.conf-which;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1l857c99yrs95460awyr03a2smhrhbjxh6vvw3jm88y8si1zg0b8";
        package = "packages/hashcons/hashcons.1.3";
      };
      pname = "hashcons";
      src = pkgs.fetchurl 
      {
        sha256 = "1kkjbm5dnvnf58bh0hqxm0yjvdc0l7n9k46l9mlpr9lfyik2kisr";
        url = "https://github.com/backtracking/ocaml-hashcons/archive/1.3.tar.gz";
      };
      version = "1.3";
    };
    iter = 
    {
      opamInputs = 
      {
        base-bigarray = selection.base-bigarray or null;
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0r964152mnr2d7f1xfc8pqpklm8ickr6q49sylc80app8ahm0yds";
        package = "packages/iter/iter.1.2.1";
      };
      pname = "iter";
      src = pkgs.fetchurl 
      {
        sha256 = "1148bcvk6w1sl6bllw9cqqbkh3c8ngrvynhy3nq8nyyydgkxkm6v";
        url = "https://github.com/c-cube/iter/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    lambda-term = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        lwt = selection.lwt;
        lwt_log = selection.lwt_log;
        lwt_react = selection.lwt_react;
        mew_vi = selection.mew_vi;
        ocaml = selection.ocaml;
        react = selection.react;
        zed = selection.zed;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vs44jlk18hgfk8fd93w2ar5f8p0h5ixb3f3v0hsxpp0fci61aw7";
        package = "packages/lambda-term/lambda-term.3.1.0";
      };
      pname = "lambda-term";
      src = pkgs.fetchurl 
      {
        sha256 = "1462j2c2nnzv6ng8b6907bw0zy3mhhnnjdm8k6as0sgm9ls0r77r";
        url = "https://github.com/ocaml-community/lambda-term/archive/3.1.0.tar.gz";
      };
      version = "3.1.0";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lwt = 
    {
      buildInputs = [ (pkgs.unzip) ];
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocaml-syntax-shims = selection.ocaml-syntax-shims or null;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0wmyy72ycwrhy9nab9nfbii70irvz2mp89i6nl5f58nba947rrdj";
        package = "packages/lwt/lwt.5.4.0";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1lv5i3znmiqx6fiq2q1lapsq1bk20bgw7h57wmk9czx9x050a5n5";
        url = "https://github.com/ocsigen/lwt/archive/5.4.0.zip";
      };
      version = "5.4.0";
    };
    lwt_log = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1b4qvc8hazj2n3shdpdi4b5575sgr3iz5zs06iajc6ph8k56hk76";
        package = "packages/lwt_log/lwt_log.1.1.1";
      };
      pname = "lwt_log";
      src = pkgs.fetchurl 
      {
        sha256 = "0gszc8nvk2hpfq47plb36qahlnyfq28sa9mhicnf6mg5c7n1kyql";
        url = "https://github.com/aantron/lwt_log/archive/1.1.1.tar.gz";
      };
      version = "1.1.1";
    };
    lwt_react = 
    {
      buildInputs = [ (pkgs.unzip) ];
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0i1pn2nahdcxjxy279lbzmbzccys3xgny015ibkza499njdyikkw";
        package = "packages/lwt_react/lwt_react.1.1.4";
      };
      pname = "lwt_react";
      src = pkgs.fetchurl 
      {
        sha256 = "1lv5i3znmiqx6fiq2q1lapsq1bk20bgw7h57wmk9czx9x050a5n5";
        url = "https://github.com/ocsigen/lwt/archive/5.4.0.zip";
      };
      version = "1.1.4";
    };
    menhir = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        menhirLib = selection.menhirLib;
        menhirSdk = selection.menhirSdk;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1khb23rcxnj2m91ylmn59g2b4zpa84ik0jv85474b0swvnxvnrsp";
        package = "packages/menhir/menhir.20210310";
      };
      pname = "menhir";
      src = pkgs.fetchurl 
      {
        sha256 = "168qd2r6aiic2l5n7gxx085avx3afsrs2vjgwzmkkayix4nak5pf";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20210310/archive.tar.gz";
      };
      version = "20210310";
    };
    menhirLib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1wgqm7zdw2y36q107vskhriz5k2m168dzr745sasiqghwyy89szw";
        package = "packages/menhirLib/menhirLib.20210310";
      };
      pname = "menhirLib";
      src = pkgs.fetchurl 
      {
        sha256 = "168qd2r6aiic2l5n7gxx085avx3afsrs2vjgwzmkkayix4nak5pf";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20210310/archive.tar.gz";
      };
      version = "20210310";
    };
    menhirSdk = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:12qn2xd7brjw64s6km8s53vbq3f45qi7d9hff5dfhc5kps0rhxdv";
        package = "packages/menhirSdk/menhirSdk.20210310";
      };
      pname = "menhirSdk";
      src = pkgs.fetchurl 
      {
        sha256 = "168qd2r6aiic2l5n7gxx085avx3afsrs2vjgwzmkkayix4nak5pf";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20210310/archive.tar.gz";
      };
      version = "20210310";
    };
    mew = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
        trie = selection.trie;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1wgfr03kwsd6an6rfxai1l60srh8wxffvyi9mc8y0fyspxmllzlc";
        package = "packages/mew/mew.0.1.0";
      };
      pname = "mew";
      src = pkgs.fetchurl 
      {
        sha256 = "1rjri9mgfb9gn9fmjn0ax21y9jd9wkvr7mmx2jrlqmzgabmqrlv4";
        url = "https://github.com/kandu/mew/archive/0.1.0.tar.gz";
      };
      version = "0.1.0";
    };
    mew_vi = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mew = selection.mew;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0zsfhxpff78cqk2c81parajb59m7hqf6v8arksxbyfha6mls65hz";
        package = "packages/mew_vi/mew_vi.0.5.0";
      };
      pname = "mew_vi";
      src = pkgs.fetchurl 
      {
        sha256 = "1nmg3cysglgw4115n5zpz4azrfbnfxkn2kvw73chzs69viygm4m6";
        url = "https://github.com/kandu/mew_vi/archive/0.5.0.tar.gz";
      };
      version = "0.5.0";
    };
    mlbdd = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0vi6z36sxggja23wgcpg5madp3sa5cmkv1xsqypzbjkcphwjb8pd";
        package = "packages/mlbdd/mlbdd.0.7.2";
      };
      pname = "mlbdd";
      src = pkgs.fetchurl 
      {
        sha256 = "1xvjn3mvpqrq4bhngf7f4d392x1g3yrz9d7ihfp0b7iwsqbp1q16";
        url = "https://github.com/arlencox/mlbdd/releases/download/v0.7.2/mlbdd-v0.7.2.tbz";
      };
      version = "0.7.2";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    msat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        iter = selection.iter;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1s25xvrnrpkz99yi1a1k2vj211xkxxglf840lvf5b62gh1p5jrp5";
        package = "packages/msat/msat.0.9";
      };
      pname = "msat";
      src = pkgs.fetchurl 
      {
        sha256 = "19d69nl7w0kwswgxvcj97ddv7azr8ad6wl1r78rb45ia155s3ijk";
        url = "https://github.com/Gbury/mSAT/archive/v0.9.tar.gz";
      };
      version = "0.9";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1yxmjf910jq4ydn6wkvwikk7i83rmawbyi50jvdwg55lj3k54pkl";
        package = "packages/ocaml/ocaml.4.11.1";
      };
      pname = "ocaml";
      src = null;
      version = "4.11.1";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1a27p05aghpzcf81rv2l49kvby6krp0yvl0zhpg6k3mrvp47sd3q";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.11.1";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "1bsb8mgqm3hg6nc11rggnn8ivbp69v0syfy3r1hv2a2h8rfxag6d";
        url = "https://github.com/ocaml/ocaml/archive/4.11.1.tar.gz";
      };
      version = "4.11.1";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0z6sqlawly39g8bxax8c97ir8gq4rl9rqjlx69gg672c561knavh";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.3";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jg32fjr7n4933r01iqgablshagx20vgjkjh5pdbn54w8cqkah58";
        url = "https://github.com/janestreet/ocaml-compiler-libs/releases/download/v0.12.3/ocaml-compiler-libs-v0.12.3.tbz";
      };
      version = "v0.12.3";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1gc3pyhb64j8a91bgbpy9fzljpb1ps2ylgw31ldx879vdkk46nhp";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-lsp-server = 
    {
      opamInputs = 
      {
        csexp = selection.csexp;
        dot-merlin-reader = selection.dot-merlin-reader;
        dune = selection.dune;
        dune-build-info = selection.dune-build-info;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        ppx_yojson_conv_lib = selection.ppx_yojson_conv_lib;
        result = selection.result;
        stdlib-shims = selection.stdlib-shims;
        yojson = selection.yojson;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:14k2iwknywrbcn1qqj3q71y31cr32ay29qz096iisgklhn0vkyw4";
        package = "packages/ocaml-lsp-server/ocaml-lsp-server.1.4.1";
      };
      pname = "ocaml-lsp-server";
      src = pkgs.fetchurl 
      {
        sha256 = "1ssyazc0yrdng98cypwa9m3nzfisdzpp7hqnx684rqj8f0g3gs6f";
        url = "https://github.com/ocaml/ocaml-lsp/releases/download/1.4.1/jsonrpc-1.4.1.tbz";
      };
      version = "1.4.1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18cw30az9wgpqjvg7fcdjgxzi294nkxriilan81nxw7bszmhs08l";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.2.1.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "07x7lm45kny0mi0fjvzw51445brm0dgy099cw0gpyly0wj77hyrq";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v2.1.0/ocaml-migrate-parsetree-v2.1.0.tbz";
      };
      version = "2.1.0";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:11avrzm0gdc6mz7dazr8q18ir5429ckc36s2mv0l8722znq8lc3k";
        package = "packages/ocamlfind/ocamlfind.1.9.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "1qhgk25avmz4l4g47g8jvk0k1g9p9d5hbdrwpz2693a8ajyvhhib";
        url = "http://download.camlcity.org/download/findlib-1.9.1.tar.gz";
      };
      version = "1.9.1";
    };
    ocp-indent = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:052h7m04agla2gvvv7ry2akdfd8khlkp01xr4qhv6w9lkwwdbfs5";
        package = "packages/ocp-indent/ocp-indent.1.8.1";
      };
      pname = "ocp-indent";
      src = pkgs.fetchurl 
      {
        sha256 = "0rqcvwzpwwzwqvrzg1l37jjiglrk2ijgjg1c7vy3xvc8lk9zyysw";
        url = "https://github.com/OCamlPro/ocp-indent/archive/1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0j5ymxa4ky208k8m4bprvmvbqf9jnr4d0xwdaivznbv85jq9hw4q";
        package = "packages/ocplib-endian/ocplib-endian.1.1";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0qy5q7p11gxi5anhvi8jj6mr80ml0ih8lax5k579rsr2hsp3sns5";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.1.tar.gz";
      };
      version = "1.1";
    };
    oseq = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0id237fi4wacy1nlws8iwvlyz2a7i2cqg71vgvgm8y2c8aaf85dz";
        package = "packages/oseq/oseq.0.3";
      };
      pname = "oseq";
      src = pkgs.fetchurl 
      {
        sha256 = "0fv1w993jr5s5zz7kdgmc3ba001vcf83nf8qhq7vargfzq99b658";
        url = "https://github.com/c-cube/oseq/archive/0.3.tar.gz";
      };
      version = "0.3";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_yojson_conv_lib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        yojson = selection.yojson;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:009x6jphkby3dqzcjafg9fyv4jlnf50bx23gy290m1cqs1mr1d89";
        package = "packages/ppx_yojson_conv_lib/ppx_yojson_conv_lib.v0.14.0";
      };
      pname = "ppx_yojson_conv_lib";
      src = pkgs.fetchurl 
      {
        sha256 = "1f1530pvyg05zwi83iwrk3v207w316wlljikwyl9ahjh24lsja46";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_yojson_conv_lib-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_derivers = selection.ppx_derivers;
        sexplib0 = selection.sexplib0;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:09s9v2jxi57chwi685hjiw3m7374vj7qg1c7a6bf29pvqm3iyn83";
        package = "packages/ppxlib/ppxlib.0.22.0";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "0ykdp55i6x1a5mbxjlvwcfvs4kvzxqnn2bi2lf224rk677h93sry";
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.22.0/ppxlib-0.22.0.tbz";
      };
      version = "0.22.0";
    };
    randomizer-engine = 
    {
      opamInputs = 
      {
        containers = selection.containers;
        dune = selection.dune;
        fmt = selection.fmt;
        hashcons = selection.hashcons;
        logs = selection.logs;
        menhir = selection.menhir;
        mlbdd = selection.mlbdd;
        msat = selection.msat;
        oseq = selection.oseq;
        sedlex = selection.sedlex;
      };
      opamSrc = "randomizer-engine.opam";
      pname = "randomizer-engine";
      src = self.directSrc "randomizer-engine";
      version = "development";
    };
    react = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0wk5i83r2hxz1r1skkhzz8rild68m4g9i9blxigbg9r60hgw18z5";
        package = "packages/react/react.1.2.1";
      };
      pname = "react";
      src = pkgs.fetchurl 
      {
        sha256 = "1aj8w79gdd9xnrbz7s5p8glcb4pmimi8jp9f439dqnf6ih3mqb3v";
        url = "http://erratique.ch/software/react/releases/react-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c7lw8dbchllz3rl801xwpm82r427vnrv7b7kqh0gwjglya50y28";
        package = "packages/result/result.1.5";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
      };
      version = "1.5";
    };
    sedlex = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        gen = selection.gen;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        uchar = selection.uchar;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:12qixdp5cz8n7873x1iwsc1jj7iswl98ad78i50lklmyni3fy4r6";
        package = "packages/sedlex/sedlex.2.3";
      };
      pname = "sedlex";
      src = pkgs.fetchurl 
      {
        sha256 = "0n0gg8iax9jjnv0azisjaqxr7p3vx2a5pwc9rsq40fsqbvmr1c7r";
        url = "https://github.com/ocaml-community/sedlex/archive/v2.3.tar.gz";
      };
      version = "2.3";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0xgkp4gm3yc47xdqzmz064qn40fp27k4ar5axi5i1wffg15qavd4";
        package = "packages/sexplib0/sexplib0.v0.14.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "0adrc0r1vvvr41dcpj8jwkzh1dfgqf0mks9xlnnskqfm3a51iavg";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib0-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19g9dnaxyh2ajz6pdczdsqzzvsmfrxwx6f613inkr31jw5hrqkiz";
        package = "packages/stdlib-shims/stdlib-shims.0.3.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "0jnqsv6pqp5b5g7lcjwgd75zqqvcwcl5a32zi03zg1kvj79p5gxs";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.3.0/stdlib-shims-0.3.0.tbz";
      };
      version = "0.3.0";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1asjip3cr84b1n1n4q8b5zrcki87niz6imb9m9zaj2kqdywmp0m5";
        package = "packages/topkg/topkg.1.0.3";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "0b77gsz9bqby8v77kfi4lans47x9p2lmzanzwins5r29maphb8y6";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.3.tbz";
      };
      version = "1.0.3";
    };
    trie = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19fpyjxqyniqjnpbqxbdb9i8khn33aqmn144h30apbdq8pxb950i";
        package = "packages/trie/trie.1.0.0";
      };
      pname = "trie";
      src = pkgs.fetchurl 
      {
        sha256 = "1slq4kiwnc723dsaw15ms7xxpqz061v8zck1m6iyc5j2li70by62";
        url = "https://github.com/kandu/trie/archive/1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    utop = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        camomile = selection.camomile;
        cppo = selection.cppo;
        dune = selection.dune;
        lambda-term = selection.lambda-term;
        lwt = selection.lwt;
        lwt_react = selection.lwt_react;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:090av508zl11n9kp5wd6qkvrcbxv6b8m0zh2yjib6d58whwa0qqp";
        package = "packages/utop/utop.2.7.0";
      };
      pname = "utop";
      src = pkgs.fetchurl 
      {
        sha256 = "1p9z7jk2dqs7qlgjliz6qhn3dw048hhbr6znyb03qz16vx9sqs70";
        url = "https://github.com/ocaml-community/utop/releases/download/2.7.0/utop-2.7.0.tbz";
      };
      version = "2.7.0";
    };
    yojson = 
    {
      opamInputs = 
      {
        biniou = selection.biniou;
        cppo = selection.cppo;
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vxmg1yiwh1wgxwwqzfrvaaff4wxanakq2yap1s2x3h54fqakkza";
        package = "packages/yojson/yojson.1.7.0";
      };
      pname = "yojson";
      src = pkgs.fetchurl 
      {
        sha256 = "1iich6323npvvs8r50lkr4pxxqm9mf6w67cnid7jg1j1g5gwcvv5";
        url = "https://github.com/ocaml-community/yojson/releases/download/1.7.0/yojson-1.7.0.tbz";
      };
      version = "1.7.0";
    };
    zed = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        camomile = selection.camomile;
        charInfo_width = selection.charInfo_width;
        dune = selection.dune;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:163xyha7x4q4fd1aai8cll72py1jkp9bl1qpz9smqn3dbzfrkrk0";
        package = "packages/zed/zed.3.1.0";
      };
      pname = "zed";
      src = pkgs.fetchurl 
      {
        sha256 = "1z95fs49hi00xy078a83m0vfdqwjb5953rwr15lfpirldi4v11y3";
        url = "https://github.com/ocaml-community/zed/archive/3.1.0.tar.gz";
      };
      version = "3.1.0";
    };
  };
}

