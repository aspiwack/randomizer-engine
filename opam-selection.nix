### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    pkgs = self.pkgs;
    repoPath = self.repoPath;
    repos = 
    {
      opam-repository = 
      rec {
        fetch = 
        {
          owner = "ocaml";
          repo = "opam-repository";
          rev = "7a8c3abfbac416d1e4cd10827642a970da6b0b6f";
          sha256 = "0d313xqnj33486rwvs7qg72z8kwn81xk835vj9c2g1xqls5syiwz";
        };
        src = (pkgs.fetchFromGitHub) fetch;
      };
    };
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.11.1";
  repos = repos;
  selection = 
  {
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    conf-autoconf = 
    {
      buildInputs = [ (pkgs.autoconf) ];
      opamInputs = {
                     conf-which = selection.conf-which;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0673l2awx2cd57hqf07vrhpf2c4kn6xlgc85sdbz2k1n5flh77gs";
        package = "packages/conf-autoconf/conf-autoconf.0.1";
      };
      pname = "conf-autoconf";
      src = null;
      version = "0.1";
    };
    conf-m4 = 
    {
      buildInputs = [ (pkgs.m4) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-which = 
    {
      buildInputs = [ (pkgs.which) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:03bz5rr206lv364q1k8rd6dkjkp8w6sjf1hbvz7svp46nf0kc7ps";
        package = "packages/conf-which/conf-which.1";
      };
      pname = "conf-which";
      src = null;
      version = "1";
    };
    containers = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1myyja46bfqbi151byvn6d3dqcgkd2w7mz33y829012ar8gj8jzg";
        package = "packages/containers/containers.3.2";
      };
      pname = "containers";
      src = pkgs.fetchurl 
      {
        sha256 = "0pii2whhyri2hmxzm4vhl71dj04vag9r23zza2b5d98w51sx9fzc";
        url = "https://github.com/c-cube/ocaml-containers/archive/v3.2.tar.gz";
      };
      version = "3.2";
    };
    csexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vhvnfmgpl5dymh0mpqfmyk9vhkhscvjp6ym2hqm7sl7fvflgfn2";
        package = "packages/csexp/csexp.1.3.2";
      };
      pname = "csexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0jhwrxfjb0x31xj4g4b89fzw34sq19j0rq2hs2zyh1vz4xxl47zj";
        url = "https://github.com/ocaml-dune/csexp/releases/download/1.3.2/csexp-1.3.2.tbz";
      };
      version = "1.3.2";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1nifrwp9g1d9rxj184vvvldgm1151h28pmsnzfagxp0gj53pni64";
        package = "packages/dune/dune.2.8.2";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "07mf6pnmv1a6wh4la45zf6cn6qy2vcmz4xgx0djj75kw1wiyii72";
        url = "https://github.com/ocaml/dune/releases/download/2.8.2/dune-2.8.2.tbz";
      };
      version = "2.8.2";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        csexp = selection.csexp;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18li0h84pnx743h6gn3gry7ygm3b7wnvmsvdjl71z5zm1qvfirlr";
        package = "packages/dune-configurator/dune-configurator.2.8.2";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "07mf6pnmv1a6wh4la45zf6cn6qy2vcmz4xgx0djj75kw1wiyii72";
        url = "https://github.com/ocaml/dune/releases/download/2.8.2/dune-2.8.2.tbz";
      };
      version = "2.8.2";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1lvq50p7a5i59jqkn4zijxm9p92c6phi20akdj3qbmlnjn8lqs7h";
        package = "packages/fmt/fmt.0.8.9";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "0gkkkj4x678vxdda4xaw2dd44qjacavsvn5nx8gydfwah6pjbkxk";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.9.tbz";
      };
      version = "0.8.9";
    };
    gen = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1qj7ampqblxcm84li60av39cil524i5rcd25m7rw5k9i3bhj6dlj";
        package = "packages/gen/gen.0.5.3";
      };
      pname = "gen";
      src = pkgs.fetchurl 
      {
        sha256 = "1jylp0i6952lj3cvmy2c4a5my5cbf39kynxgbh4xg3k7dp7540qn";
        url = "https://github.com/c-cube/gen/archive/0.5.3.tar.gz";
      };
      version = "0.5.3";
    };
    hashcons = 
    {
      opamInputs = 
      {
        conf-autoconf = selection.conf-autoconf;
        conf-which = selection.conf-which;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1l857c99yrs95460awyr03a2smhrhbjxh6vvw3jm88y8si1zg0b8";
        package = "packages/hashcons/hashcons.1.3";
      };
      pname = "hashcons";
      src = pkgs.fetchurl 
      {
        sha256 = "1kkjbm5dnvnf58bh0hqxm0yjvdc0l7n9k46l9mlpr9lfyik2kisr";
        url = "https://github.com/backtracking/ocaml-hashcons/archive/1.3.tar.gz";
      };
      version = "1.3";
    };
    iter = 
    {
      opamInputs = 
      {
        base-bigarray = selection.base-bigarray or null;
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0x4in908r8aiymx9n2lvpbx1vvmiff1f8dz1ivl3b8rnbgs0y551";
        package = "packages/iter/iter.1.2.1";
      };
      pname = "iter";
      src = pkgs.fetchurl 
      {
        sha256 = "1148bcvk6w1sl6bllw9cqqbkh3c8ngrvynhy3nq8nyyydgkxkm6v";
        url = "https://github.com/c-cube/iter/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    menhir = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        menhirLib = selection.menhirLib;
        menhirSdk = selection.menhirSdk;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:15y0ssqdkgsrxnhl3axkahxbhzi2df7h4hq7yhpkm15il399p642";
        package = "packages/menhir/menhir.20201216";
      };
      pname = "menhir";
      src = pkgs.fetchurl 
      {
        sha256 = "05fpg5c83a6q0q12kd2ll069pg80yd91s4rzx3742ard3l2aml8z";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20201216/archive.tar.gz";
      };
      version = "20201216";
    };
    menhirLib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0clavqlnffq1gin9zga1x9ihn7bwhiwy7gr7inn4a6nhyxnh9qx9";
        package = "packages/menhirLib/menhirLib.20201216";
      };
      pname = "menhirLib";
      src = pkgs.fetchurl 
      {
        sha256 = "05fpg5c83a6q0q12kd2ll069pg80yd91s4rzx3742ard3l2aml8z";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20201216/archive.tar.gz";
      };
      version = "20201216";
    };
    menhirSdk = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:00k00g4b423df66rxz60qkj5lgqlac59h3hc1kvpc7qv5i9k78fc";
        package = "packages/menhirSdk/menhirSdk.20201216";
      };
      pname = "menhirSdk";
      src = pkgs.fetchurl 
      {
        sha256 = "05fpg5c83a6q0q12kd2ll069pg80yd91s4rzx3742ard3l2aml8z";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20201216/archive.tar.gz";
      };
      version = "20201216";
    };
    mlbdd = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0vi6z36sxggja23wgcpg5madp3sa5cmkv1xsqypzbjkcphwjb8pd";
        package = "packages/mlbdd/mlbdd.0.7.2";
      };
      pname = "mlbdd";
      src = pkgs.fetchurl 
      {
        sha256 = "1xvjn3mvpqrq4bhngf7f4d392x1g3yrz9d7ihfp0b7iwsqbp1q16";
        url = "https://github.com/arlencox/mlbdd/releases/download/v0.7.2/mlbdd-v0.7.2.tbz";
      };
      version = "0.7.2";
    };
    msat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        iter = selection.iter;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1s25xvrnrpkz99yi1a1k2vj211xkxxglf840lvf5b62gh1p5jrp5";
        package = "packages/msat/msat.0.9";
      };
      pname = "msat";
      src = pkgs.fetchurl 
      {
        sha256 = "19d69nl7w0kwswgxvcj97ddv7azr8ad6wl1r78rb45ia155s3ijk";
        url = "https://github.com/Gbury/mSAT/archive/v0.9.tar.gz";
      };
      version = "0.9";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1yxmjf910jq4ydn6wkvwikk7i83rmawbyi50jvdwg55lj3k54pkl";
        package = "packages/ocaml/ocaml.4.11.1";
      };
      pname = "ocaml";
      src = null;
      version = "4.11.1";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:09ak47zx0g1qbhfqclyw5mczsm5m1icrjgwlw43p0dw33jkmkz9a";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.11.1";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "1bsb8mgqm3hg6nc11rggnn8ivbp69v0syfy3r1hv2a2h8rfxag6d";
        url = "https://github.com/ocaml/ocaml/archive/4.11.1.tar.gz";
      };
      version = "4.11.1";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0z6sqlawly39g8bxax8c97ir8gq4rl9rqjlx69gg672c561knavh";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.3";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jg32fjr7n4933r01iqgablshagx20vgjkjh5pdbn54w8cqkah58";
        url = "https://github.com/janestreet/ocaml-compiler-libs/releases/download/v0.12.3/ocaml-compiler-libs-v0.12.3.tbz";
      };
      version = "v0.12.3";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18cw30az9wgpqjvg7fcdjgxzi294nkxriilan81nxw7bszmhs08l";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.2.1.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "07x7lm45kny0mi0fjvzw51445brm0dgy099cw0gpyly0wj77hyrq";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v2.1.0/ocaml-migrate-parsetree-v2.1.0.tbz";
      };
      version = "2.1.0";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:04z3rq1y20wfzmwvjm9wlg89cqqs8n37inhbwp4x2dsqbn0hqd81";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    oseq = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ji7x46yx7fcbigga6hwinswkxi24kjjdrklmggfrzzknzdsv77z";
        package = "packages/oseq/oseq.0.3";
      };
      pname = "oseq";
      src = pkgs.fetchurl 
      {
        sha256 = "0fv1w993jr5s5zz7kdgmc3ba001vcf83nf8qhq7vargfzq99b658";
        url = "https://github.com/c-cube/oseq/archive/0.3.tar.gz";
      };
      version = "0.3";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_derivers = selection.ppx_derivers;
        sexplib0 = selection.sexplib0;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:09s9v2jxi57chwi685hjiw3m7374vj7qg1c7a6bf29pvqm3iyn83";
        package = "packages/ppxlib/ppxlib.0.22.0";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "0ykdp55i6x1a5mbxjlvwcfvs4kvzxqnn2bi2lf224rk677h93sry";
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.22.0/ppxlib-0.22.0.tbz";
      };
      version = "0.22.0";
    };
    randomizer-engine = 
    {
      opamInputs = 
      {
        containers = selection.containers;
        dune = selection.dune;
        fmt = selection.fmt;
        hashcons = selection.hashcons;
        logs = selection.logs;
        menhir = selection.menhir;
        mlbdd = selection.mlbdd;
        msat = selection.msat;
        oseq = selection.oseq;
        sedlex = selection.sedlex;
      };
      opamSrc = "randomizer-engine.opam";
      pname = "randomizer-engine";
      src = self.directSrc "randomizer-engine";
      version = "development";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c7lw8dbchllz3rl801xwpm82r427vnrv7b7kqh0gwjglya50y28";
        package = "packages/result/result.1.5";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
      };
      version = "1.5";
    };
    sedlex = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        gen = selection.gen;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        uchar = selection.uchar;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:12qixdp5cz8n7873x1iwsc1jj7iswl98ad78i50lklmyni3fy4r6";
        package = "packages/sedlex/sedlex.2.3";
      };
      pname = "sedlex";
      src = pkgs.fetchurl 
      {
        sha256 = "0n0gg8iax9jjnv0azisjaqxr7p3vx2a5pwc9rsq40fsqbvmr1c7r";
        url = "https://github.com/ocaml-community/sedlex/archive/v2.3.tar.gz";
      };
      version = "2.3";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0xgkp4gm3yc47xdqzmz064qn40fp27k4ar5axi5i1wffg15qavd4";
        package = "packages/sexplib0/sexplib0.v0.14.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "0adrc0r1vvvr41dcpj8jwkzh1dfgqf0mks9xlnnskqfm3a51iavg";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib0-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19g9dnaxyh2ajz6pdczdsqzzvsmfrxwx6f613inkr31jw5hrqkiz";
        package = "packages/stdlib-shims/stdlib-shims.0.3.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "0jnqsv6pqp5b5g7lcjwgd75zqqvcwcl5a32zi03zg1kvj79p5gxs";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.3.0/stdlib-shims-0.3.0.tbz";
      };
      version = "0.3.0";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1asjip3cr84b1n1n4q8b5zrcki87niz6imb9m9zaj2kqdywmp0m5";
        package = "packages/topkg/topkg.1.0.3";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "0b77gsz9bqby8v77kfi4lans47x9p2lmzanzwins5r29maphb8y6";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.3.tbz";
      };
      version = "1.0.3";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
  };
}

